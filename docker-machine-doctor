#!/bin/bash -eu

if [ ! "$DOCKER_MACHINE_NAME" ] && [ "$#" -ne 1 ]; then
	echo "Usage: docker-machine-doctor <name>"
	exit 1
fi

NAME="${DOCKER_MACHINE_NAME:-$1}"
FS="/mnt/sda1"

if [ ! "$(which docker-machine)" ]; then
    echo "Error: Could not find docker-machine executable"
    exit 1
fi

STATUS="$(docker-machine status $NAME)"
if [ "$STATUS" != "Running" ]; then
	echo "Error: Docker Machine $NAME not running: $STATUS"
	exit 1
fi

DRIVER="$(docker-machine inspect --format="{{.DriverName}}" $NAME)"
if [ "$DRIVER" != "virtualbox" ]; then
	echo "Error: Docker Machine $NAME driver not supported: $DRIVER"
	exit 1
fi

_warn() {
    if [ -t 1 ]; then
	    echo -e "\033[1;33mWarning: $@\033[0m"
    else
        echo "$@"
    fi
}

_error() {
    if [ -t 1 ]; then
	    echo -e "\033[1;31mError: $@\033[0m"
    else
        echo "$@"
    fi
}

_header() {
    if [ -t 1 ]; then
	    echo -e "\033[1;37m$@\033[0m"
    else
        echo "$@"
    fi
}

_footer() {
    echo
    echo
}

_ssh() {
    docker-machine ssh $NAME "$@"
}

_du() {
    _ssh "sudo du -sh $@"
}

_du_top10() {
    _ssh "sudo find $1 -type f -print0 | xargs -0 sudo du -a -m 2> /dev/null" \
	    | sort -n -r \
	    | ( grep -m 10 -v "^0" || : ) \
	    | sed "s/\([0-9]\+\)/\1M/"
}

docker_machine_version() {
    _header "Docker machine version:"
    docker-machine -version
    _footer
}

docker_version() {
    _header "Docker client and server version:"
    docker version
    _footer
}

docker_images() {
    _header "Intermediate images:"
    _ssh 'docker images' | awk '$1 == "<none>" {print $3 "\t" $7 " " $8}'
    _footer
}

docker_containers() {
    _header "Containers:"
    _ssh 'docker ps --all --format="table {{.ID}}\t{{.Image}}\t{{.Size}}"'
    _footer
}

driver_storepath() {
    _header "Docker machine store path:"
    docker-machine inspect --format="{{.Driver.Driver.StorePath}}" $NAME
    _footer
}

driver_fs_check_mounted() {
    _header "Virtual hard drive mounted:"
    local device="/dev/sda1"
    local status=$(_ssh 'mount | grep "$device on $FS" > /dev/null ; echo $?')
    if [ "$status" != "0" ]; then
        _warn "No. Virtual hard drive not mounted!"
    else
        echo "Yes."
    fi
    _footer
}

driver_fs_mounts() {
    _header "Filesystem mounts:"
    _ssh 'sudo df -a -T -h -m' | sort -k 6 -r
    _footer
}

driver_disk_containers() {
    _header "Disk space usage: Containers:"
    _du "$FS/var/lib/docker/containers/"
    echo
    _du_top10 "$FS/var/lib/docker/containers/"
    _footer
}

driver_disk_volumes() {
    _header "Disk space usage: Volumes:"
    _du "$FS/var/lib/docker/volumes/"
    echo
    _du_top10 "$FS/var/lib/docker/volumes/"
    _footer
}

driver_disk_fs() {
    _header "Disk space usage: Filesystem:"
    _du "$FS/var/lib/docker/aufs/diff/"
    echo
    _du_top10 "$FS/var/lib/docker/aufs/diff/"
    _footer
}

driver_disk_temp() {
    _header "Disk space usage: Temporary files:"
    _du "$FS/lost+found/" "$FS/tmp/" "$FS/var/lib/docker/tmp/"
    echo
    _du_top10 "$FS/lost+found/"
    _du_top10 "$FS/tmp/"
    _du_top10 "$FS/var/lib/docker/tmp/"
    _footer
}

main() {
    docker_version
    docker_machine_version
    docker_images
    docker_containers
    driver_storepath
    driver_fs_check_mounted
    driver_fs_mounts
    driver_disk_containers
    driver_disk_volumes
    driver_disk_fs
    driver_disk_temp
}

main
